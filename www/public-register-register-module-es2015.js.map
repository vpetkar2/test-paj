{"version":3,"sources":["./src/app/public/register/register.page.html","./src/app/public/register/register.module.ts","./src/app/public/register/register.page.scss","./src/app/public/register/register.page.ts"],"names":[],"mappings":"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","file":"public-register-register-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\" mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"/dashboard\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content padding>\\n    <ion-grid> \\n        <ion-row>\\n            <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n              <ion-list >\\n                <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"register(f)\\\" [formGroup]=\\\"registerForm\\\">\\n                  <ion-item no-padding>\\n                    <ion-input type=\\\"text\\\"  formControlName=\\\"name\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"username\\\" name=\\\"name\\\" required></ion-input>\\n                  </ion-item>\\n                  <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"registerForm.get('name').hasError(validation.type) && (registerForm.get('name').dirty || registerForm.get('name').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                  </div>\\n\\n                  <ion-item no-padding>\\n                    <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"  placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required></ion-input>\\n                  </ion-item>\\n                  <div class=\\\"validation-errors\\\">\\n                      <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"registerForm.get('email').hasError(validation.type) && (registerForm.get('email').dirty || registerForm.get('email').touched)\\\">\\n                          {{ validation.message }}\\n                        </div>\\n                      </ng-container>\\n                    </div>\\n\\n                  <ion-item no-padding>\\n                    <ion-input  type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\"  name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required></ion-input>\\n                  </ion-item>\\n                  <div class=\\\"validation-errors\\\">\\n                      <ng-container *ngFor=\\\"let validation of validationMessages.password\\\">\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"registerForm.get('password').hasError(validation.type) && (registerForm.get('password').dirty || registerForm.get('password').touched)\\\">\\n                          {{ validation.message }}\\n                        </div>\\n                      </ng-container>\\n                    </div>\\n\\n                  <ion-item no-padding>\\n                      <ion-input  type=\\\"password\\\" formControlName=\\\"c_password\\\" placeholder=\\\"Confirm Password\\\"  name=\\\"c_password\\\" [(ngModel)]=\\\"cPassword\\\" required></ion-input>\\n                    </ion-item>\\n                    <div class=\\\"validation-errors\\\">\\n                        <ng-container *ngFor=\\\"let validation of validationMessages.c_password\\\">\\n                          <div class=\\\"error-message\\\" *ngIf=\\\"registerForm.get('c_password').hasError(validation.type) && (registerForm.get('c_password').dirty || registerForm.get('c_password').touched)\\\">\\n                            {{ validation.message }}\\n                          </div>\\n                        </ng-container>\\n                      </div>\\n                  \\n                  <ion-button  expand=\\\"block\\\" color=\\\"secondary\\\"  type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Register</ion-button>\\n                </form>\\n              </ion-list>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthenticationService } from './../../services/authentication.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  public registerForm: FormGroup;\n  email: string;\n  username: string;\n  password: string;\n  cPassword: string;\n\n  validationMessages = {\n    'email': [\n        { type: 'required', message: 'Email is required.' },\n        { type: 'minlength', message: 'Email must be at least 5 characters long.' },\n        { type: 'maxlength', message: 'Email cannot be more than 30 characters long.' }\n      ],\n    'name': [\n      { type: 'required', message: 'Name is required.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 8 characters long.' }\n    ],\n    'c_password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 8 characters long.' }\n    ],\n  };\n  constructor(private authService: AuthenticationService, public formBuilder: FormBuilder, public loadingCtrl: LoadingController) {\n    this.registerForm = formBuilder.group({\n      name: ['', Validators.compose([Validators.maxLength(30),  Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n      email: ['', Validators.compose([Validators.maxLength(30), Validators.minLength(5), Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'), Validators.required])],\n      password: ['', Validators.compose([Validators.minLength(8), Validators.required])],\n      c_password: ['', Validators.compose([Validators.minLength(8), Validators.required])]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  async register(form) {\n    const loading = await this.loadingCtrl.create({\n      message: 'Please Wait',\n      translucent: true,\n    });\n    await loading.present();\n    this.authService.register(form.value.name, form.value.email, form.value.password);\n    loading.dismiss();\n    this.email = '';\n    this.username = '';\n    this.password = '';\n    this.cPassword = '';\n  }\n\n}\n"],"sourceRoot":"webpack:///"}